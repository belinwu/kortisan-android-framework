package com.kortisan.framework.redux.middleware/** * * * * * * * * * * Project KoreFrame * Created by Jacobo G Tamayo on 30/12/22.* * * * * * * * * * **/import com.kortisan.framework.redux.actions.NotificationActionsimport com.kortisan.framework.redux.actions.ReduxActionimport com.kortisan.framework.redux.controllers.ControllersProxyimport com.kortisan.framework.redux.controllers.notifications.PushNotificationControllerimport com.kortisan.framework.redux.stores.ApplicationStateStore/** * Esta clase se encarga de crear las notificaciones push en la aplicaci√≥n */object NotificationMiddleware: MiddlewareInterface {    override fun doNext(action: ReduxAction, applicationState: ApplicationStateStore): ReduxAction {        if (action is NotificationActions) {            val notificationController =                ControllersProxy.getController<PushNotificationController>()            when (action) {                is NotificationActions.ShowNotification ->                    notificationController?.showNotification(action)                is NotificationActions.ShowCleverTapNotification ->                    notificationController?.showCleverTapNotification(action)                NotificationActions.HideAllNotifications ->                    notificationController?.hideAllNotifications()                is NotificationActions.HideNotification ->                    notificationController?.hideNotificationById( action.notificationId )            }        }        return action    }}