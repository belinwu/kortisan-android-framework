package com.kortisan.framework.redux.controllers.notificationsimport com.kortisan.framework.redux.controllers.tagging.decorators.SceneBaseDecoratorimport com.kortisan.framework.redux.controllers.tagging.decorators.SceneDecoratorInterfaceclass FirebaseMessagingDecorator(    override val sceneDecorator: SceneDecoratorInterface): SceneBaseDecorator() {    fun setIdFlow(idFlow: String): FirebaseMessagingDecorator =        apply { decoratedValues["id_flow"] = idFlow }    fun setIdPush(idPush: String): FirebaseMessagingDecorator =        apply { decoratedValues["id_push"] = idPush }    fun setProduct(producto: String): FirebaseMessagingDecorator =        apply { decoratedValues["producto"] = producto }    fun setIdCampania(idCampania: String): FirebaseMessagingDecorator =        apply { decoratedValues["id"] = idCampania }    fun setCategory(category: String): FirebaseMessagingDecorator =        apply { decoratedValues["category"] = category }    fun setElement(element: String): FirebaseMessagingDecorator =        apply { decoratedValues["element"] = element }    fun setType(type: String): FirebaseMessagingDecorator =        apply { decoratedValues["type"] = type }    fun setFlow(flow: String): FirebaseMessagingDecorator =        apply { decoratedValues["flow"] = flow }}